(()=>{"use strict";const t="//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n//\n\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec2  mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec3  mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4  mod289(vec4 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}\nfloat permute(float x){return mod289(((x*34.0)+1.0)*x);}\nvec3  permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);}\nvec4  permute(vec4 x) {return mod289(((x*34.0)+1.0)*x);}\nfloat taylorInvSqrt(float r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4  taylorInvSqrt(vec4 r) {return 1.79284291400159 - 0.85373472095314 * r;}\nfloat snoise2D(vec2 v){\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n  // First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n  // Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n  // Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m * m;\n  m = m * m;\n\n  // Gradients: 41 points uniformly over a line, mapped onto a diamond.\n  // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n  // Normalise gradients implicitly by scaling m\n  // Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n  // Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\nfloat snoise3D(vec3 v){\n  const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\n  const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\n}\nvec4 grad4(float j, vec4 ip){\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n  return p;\n}\nfloat snoise4D(vec4 v){\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n  // First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n  // Other corners\n\n  // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n  //  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n  //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n  // Permutations\n  i = mod289(i);\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n  // Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n  // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n  // Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n                + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n}\nfloat fsnoise      (vec2 c){return fract(sin(dot(c, vec2(12.9898, 78.233))) * 43758.5453);}\nfloat fsnoiseDigits(vec2 c){return fract(sin(dot(c, vec2(0.129898, 0.78233))) * 437.585453);}\nvec3 hsv(float h, float s, float v){\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\nmat2 rotate2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\nmat3 rotate3D(float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    return mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n}\nconst float PI = 3.141592653589793;\nconst float PI2 = PI * 2.0;\n\n";class e{static get RAINBOW_MODE_GEEKEST_300(){return 0}static get VINIL_MODE_GEEKER_MRT(){return 1}static get DEFAULT_SOURCE(){let t="";for(let i=0;i<e.MRT_TARGET_COUNT;++i)t+=`layout (location = ${i}) out vec4 outColor${i};\n`;let i="";for(let t=0;t<e.MRT_TARGET_COUNT;++t)i+=`layout (location = ${t}) out vec4 o${t};\n`;let s="";for(let t=1;t<e.MRT_TARGET_COUNT;++t)s+=`outColor${t}=outColor0;`;let n="";for(let t=1;t<e.MRT_TARGET_COUNT;++t)n+=`o${t}=o0;`;return["vec2 p=(FC.xy*2.-r)/r.y,x,d;for(float i=1.-fract(t);i<25.;i+=.5)x=p+(cos(i*vec2(.8,.5)+t)+vec2(0,4.-i))/i,d=vec2(4,sin(i)*.4)/i,o+=(cos(i+vec4(0,2,4,0))+1.)/(length(x-d*clamp(dot(x,d)/dot(d,d),-1.,1.))+i/1e3)/max(i*i,5.)*.1;","vec2 i=r/r,p=(FC.xy-r/vec2(-9,9))*mat2(2,1,-2,4)/4e1,l=p/p*length(p);o1+=(snoise2D(l)+snoise2D(p*rotate2D(t*.1))*.3)/l.x*vec4(70,40,30,1);p=p.yy/1e2;for(vec4 S;i.x<16.;i+=1./i)p*=rotate2D(2.4),S=texture(b1,FC.xy/r+p*i/r),o0+=S*=S*=S*=S;o0=sqrt(sqrt(o0)*.1);"]}static get ES_300_CHUNK(){return"#version 300 es\n"}static get GEEKER_CHUNK(){return"precision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;uniform sampler2D b;\n"}static get GEEKER_OUT_CHUNK(){return"out vec4 o;\n"}static get GEEKER_MRT_CHUNK(){const t=[];for(let i=0;i<e.MRT_TARGET_COUNT;++i)t.push(`uniform sampler2D b${i};`);return`precision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;${t.join("")}\n`}static get GEEKER_OUT_MRT_CHUNK(){const t=[];for(let i=0;i<e.MRT_TARGET_COUNT;++i)t.push(`layout (location = ${i}) out vec4 o${i};`);return`${t.join("")}\n`}static get GEEKEST_CHUNK(){return`#define FC gl_FragCoord\nprecision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;uniform sampler2D b;\n${t}\n`}static get GEEKEST_OUT_CHUNK(){return"out vec4 o;\n"}static get GEEKEST_MRT_CHUNK(){const i=[];for(let t=0;t<e.MRT_TARGET_COUNT;++t)i.push(`uniform sampler2D b${t};`);return`#define FC gl_FragCoord\nprecision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;${i.join("")}\n${t}\n`}static get GEEKEST_OUT_MRT_CHUNK(){const t=[];for(let i=0;i<e.MRT_TARGET_COUNT;++i)t.push(`layout (location = ${i}) out vec4 o${i};`);return`${t.join("")}\n`}constructor(t){this.target=null,this.eventTarget=null,this.canvas=null,this.isWebGL2=!1,this.gl=null,this.resize=!1,this.width=0,this.height=0,this.mousePosition=[0,0],this.mode=e.MODE_CLASSIC,this.animation=!0,this.run=!1,this.startTime=0,this.nowTime=0,this.frameCount=0,this.program=null,this.uniLocation=null,this.attLocation=null,this.frequency=0,this.VS="",this.FS="",this.postProgram=null,this.postUniLocation=null,this.postAttLocation=null,this.postVS="",this.postFS="",this.fFront=null,this.fBack=null,this.fTemp=null,this.buffers=null,this.render=this.render.bind(this),this.rect=this.rect.bind(this),this.reset=this.reset.bind(this),this.draw=this.draw.bind(this),this.mouseMove=this.mouseMove.bind(this),this.keyDown=this.keyDown.bind(this),this.init(t)}init(t){if(null==t)return;if(!t.hasOwnProperty("target")||null===t.target||void 0===t.target)return;if(!(t.target instanceof HTMLElement))return;this.target=this.eventTarget=t.target,this.target.tagName.match(/canvas/i)?this.canvas=this.target:(this.canvas=document.createElement("canvas"),this.target.appendChild(this.canvas));const e={alpha:!1,preserveDrawingBuffer:!0};if(this.gl=this.canvas.getContext("webgl2",e),this.isWebGL2=null!=this.gl,!0!==this.isWebGL2&&(this.gl=this.canvas.getContext("webgl",e),this.gl.getExtension("OES_standard_derivatives")),null==this.gl)return void console.log("webgl unsupported");t.hasOwnProperty("eventTarget")&&null!==t.eventTarget&&void 0!==t.eventTarget&&(this.eventTarget=t.eventTarget),t.hasOwnProperty("mouse")&&!0===t.mouse&&this.eventTarget.addEventListener("pointermove",this.mouseMove,!1),t.hasOwnProperty("escape")&&!0===t.escape&&window.addEventListener("keydown",this.keyDown,!1),t.hasOwnProperty("resize")&&!0===t.resize&&(this.resize=!0,window.addEventListener("resize",this.rect,!1)),this.VS="attribute vec3 p;void main(){gl_Position=vec4(p,1.);}",this.postVS="\nattribute vec3 position;\nvarying   vec2 vTexCoord;\nvoid main(){\n    vTexCoord   = (position + 1.0).xy / 2.0;\n    gl_Position = vec4(position, 1.0);\n}",this.postFS="\nprecision mediump float;\nuniform sampler2D texture;\nvarying vec2      vTexCoord;\nvoid main(){\n    gl_FragColor = texture2D(texture, vTexCoord);\n}",this.postProgram=this.gl.createProgram();let i=this.createShader(this.postProgram,0,this.postVS),s=this.createShader(this.postProgram,1,this.postFS);this.gl.linkProgram(this.postProgram),this.gl.deleteShader(i),this.gl.deleteShader(s),this.postUniLocation={},this.postUniLocation.texture=this.gl.getUniformLocation(this.postProgram,"texture"),this.postAttLocation=this.gl.getAttribLocation(this.postProgram,"position"),this.post300VS="#version 300 es\nin  vec3 position;\nout vec2 vTexCoord;\nvoid main(){\n    vTexCoord   = (position + 1.0).xy / 2.0;\n    gl_Position = vec4(position, 1.0);\n}",this.post300FS="#version 300 es\nprecision mediump float;\nuniform sampler2D drawTexture;\nin vec2 vTexCoord;\nlayout (location = 0) out vec4 outColor;\nvoid main(){\n    outColor = texture(drawTexture, vTexCoord);\n}",!0===this.isWebGL2&&(this.post300Program=this.gl.createProgram(),i=this.createShader(this.post300Program,0,this.post300VS),s=this.createShader(this.post300Program,1,this.post300FS),this.gl.linkProgram(this.post300Program),this.gl.deleteShader(i),this.gl.deleteShader(s),this.post300UniLocation={},this.post300UniLocation.texture=this.gl.getUniformLocation(this.post300Program,"drawTexture"),this.post300AttLocation=this.gl.getAttribLocation(this.post300Program,"position")),this.fFront=this.fBack=this.fTemp=null,this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.createBuffer()),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,1,0,-1,-1,0,1,1,0,1,-1,0]),this.gl.STATIC_DRAW),this.gl.disable(this.gl.DEPTH_TEST),this.gl.disable(this.gl.CULL_FACE),this.gl.disable(this.gl.BLEND),this.gl.clearColor(0,0,0,1)}render(t){if(null==t||""===t){if(""===this.FS)return}else this.FS=t;return this.reset(),this}rect(){const t=this.target.getBoundingClientRect();switch(this.width=t.width,this.height=t.height,this.canvas.width=this.width,this.canvas.height=this.height,this.resetBuffer(this.fFront),this.resetBuffer(this.fBack),this.resetBuffer(this.fTemp),this.mode){case e.MODE_CLASSIC_MRT:case e.MODE_GEEK_MRT:case e.VINIL_MODE_GEEKER_MRT:case e.MODE_GEEKEST_MRT:this.fFront=this.createFramebufferMRT(this.width,this.height,e.MRT_TARGET_COUNT),this.fBack=this.createFramebufferMRT(this.width,this.height,e.MRT_TARGET_COUNT);break;default:this.fFront=this.createFramebuffer(this.width,this.height),this.fBack=this.createFramebuffer(this.width,this.height)}this.gl.viewport(0,0,this.width,this.height)}reset(){this.rect();let t=this.gl.createProgram(),s=this.createShader(t,0,this.preprocessVertexCode(this.VS));if(!1===s)return;let n=this.createShader(t,1,this.preprocessFragmentCode(this.FS));if(!1===n)return void this.gl.deleteShader(s);if(this.gl.linkProgram(t),this.gl.deleteShader(s),this.gl.deleteShader(n),!this.gl.getProgramParameter(t,this.gl.LINK_STATUS)){let e=this.gl.getProgramInfoLog(t);if(e=this.formatErrorMessage(e),console.warn(e),null!=this.onBuildCallback){const t=i();this.onBuildCallback("error",` ● [ ${t} ] ${e}`)}return void(t=null)}let r="resolution",o="mouse",a="time",h="frame",l="sound",c="backbuffer",E=[];for(let t=0;t<e.MRT_TARGET_COUNT;++t)E.push(`backbuffer${t}`);let g=[];for(let t=0;t<e.MRT_TARGET_COUNT;++t)g.push(`b${t}`);switch(this.mode!==e.MODE_GEEK&&this.mode!==e.MODE_GEEKER&&this.mode!==e.MODE_GEEKEST&&this.mode!==e.MODE_GEEK_300&&this.mode!==e.MODE_GEEKER_300&&this.mode!==e.RAINBOW_MODE_GEEKEST_300&&this.mode!==e.MODE_GEEK_MRT&&this.mode!==e.VINIL_MODE_GEEKER_MRT&&this.mode!==e.MODE_GEEKEST_MRT||(r="r",o="m",a="t",h="f",l="s",c="b"),null!=this.program&&this.gl.deleteProgram(this.program),this.program=t,this.gl.useProgram(this.program),this.uniLocation={},this.uniLocation.resolution=this.gl.getUniformLocation(this.program,r),this.uniLocation.mouse=this.gl.getUniformLocation(this.program,o),this.uniLocation.time=this.gl.getUniformLocation(this.program,a),this.uniLocation.frame=this.gl.getUniformLocation(this.program,h),this.uniLocation.sound=this.gl.getUniformLocation(this.program,l),this.mode){case e.MODE_CLASSIC_MRT:for(let t=0;t<e.MRT_TARGET_COUNT;++t)this.uniLocation[`sampler${t}`]=this.gl.getUniformLocation(this.program,E[t]);break;case e.MODE_GEEK_MRT:case e.VINIL_MODE_GEEKER_MRT:case e.MODE_GEEKEST_MRT:for(let t=0;t<e.MRT_TARGET_COUNT;++t)this.uniLocation[`sampler${t}`]=this.gl.getUniformLocation(this.program,g[t]);break;default:this.uniLocation.sampler=this.gl.getUniformLocation(this.program,c)}this.attLocation=this.gl.getAttribLocation(this.program,"p"),this.mousePosition=[0,0],this.startTime=Date.now(),this.frameCount=0,this.run||(this.run=!0,this.draw())}draw(){if(this.run){if(!0===this.animation&&requestAnimationFrame(this.draw),this.nowTime=.001*(Date.now()-this.startTime),++this.frameCount,this.gl.useProgram(this.program),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fFront.f),!0===Array.isArray(this.fBack.t)){this.gl.drawBuffers(this.buffers);for(let t=0;t<e.MRT_TARGET_COUNT;++t)this.gl.activeTexture(this.gl.TEXTURE0+t),this.gl.bindTexture(this.gl.TEXTURE_2D,this.fBack.t[t]),this.gl.uniform1i(this.uniLocation[`sampler${t}`],t)}else this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.fBack.t),this.gl.uniform1i(this.uniLocation.sampler,0);this.gl.enableVertexAttribArray(this.attLocation),this.gl.vertexAttribPointer(this.attLocation,3,this.gl.FLOAT,!1,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.uniform2fv(this.uniLocation.mouse,this.mousePosition),this.gl.uniform1f(this.uniLocation.time,this.nowTime),this.gl.uniform1f(this.uniLocation.frame,this.frameCount),this.gl.uniform2fv(this.uniLocation.resolution,[this.width,this.height]),this.gl.uniform1f(this.uniLocation.sound,this.frequency),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),!0===Array.isArray(this.fBack.t)?(this.gl.useProgram(this.post300Program),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.fFront.t[0]),this.gl.enableVertexAttribArray(this.post300AttLocation),this.gl.vertexAttribPointer(this.post300AttLocation,3,this.gl.FLOAT,!1,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.uniform1i(this.post300UniLocation.texture,0)):(this.gl.useProgram(this.postProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.fFront.t),this.gl.enableVertexAttribArray(this.postAttLocation),this.gl.vertexAttribPointer(this.postAttLocation,3,this.gl.FLOAT,!1,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.uniform1i(this.postUniLocation.texture,0)),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.gl.flush(),this.fTemp=this.fFront,this.fFront=this.fBack,this.fBack=this.fTemp,null!=this.onDrawCallback&&this.onDrawCallback()}}createShader(t,e,s){if(!this.gl)return!1;const n=this.gl.createShader(this.gl.VERTEX_SHADER-e);this.gl.shaderSource(n,s),this.gl.compileShader(n);const r=i();if(!this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)){let t=this.gl.getShaderInfoLog(n);return t=this.formatErrorMessage(t),console.warn(t),null!=this.onBuildCallback&&this.onBuildCallback("error",` ● [ ${r} ] ${t}`),!1}null!=this.onBuildCallback&&this.onBuildCallback("success",` ● [ ${r} ] shader compile succeeded`),this.gl.attachShader(t,n);const o=this.gl.getShaderInfoLog(n);return""!==o&&console.info("shader info: "+o),n}createFramebuffer(t,e){const i=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i);const s=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,s),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,t,e),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,s);const n=this.gl.createTexture();return this.gl.bindTexture(this.gl.TEXTURE_2D,n),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,n,0),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),{f:i,d:s,t:n}}createFramebufferMRT(t,e,i){const s=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,s);const n=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,n),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,t,e),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,n);const r=[];this.buffers=[];for(let s=0;s<i;++s){const i=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0+s,this.gl.TEXTURE_2D,i,0),r.push(i),this.buffers.push(this.gl.COLOR_ATTACHMENT0+s)}return this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),{f:s,d:n,t:r}}resetBuffer(t){this.gl&&t&&(t.hasOwnProperty("f")&&null!=t.f&&this.gl.isFramebuffer(t.f)&&(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.deleteFramebuffer(t.f),t.f=null),t.hasOwnProperty("d")&&null!=t.d&&this.gl.isRenderbuffer(t.d)&&(this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null),this.gl.deleteRenderbuffer(t.d),t.d=null),t.hasOwnProperty("t")&&!0===Array.isArray(t.t)?(this.gl.bindTexture(this.gl.TEXTURE_2D,null),t.t.forEach((t=>{this.gl.deleteTexture(t),t=null}))):t.hasOwnProperty("t")&&null!=t.t&&this.gl.isTexture(t.t)&&(this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.deleteTexture(t.t),t.t=null),t=null)}mouseMove(t){if(t.clientY>this.target.height)return;const e=Math.min(t.clientX,this.target.width),i=Math.min(t.clientY,this.target.height);this.mousePosition=[e/this.target.width,1-i/this.target.height]}keyDown(t){null!==this.gl&&(this.run=27!==t.keyCode)}onBuild(t){this.onBuildCallback=t}onDraw(t){this.onDrawCallback=t}setFrequency(t){this.frequency=t}setAnimation(t){this.animation=t}preprocessVertexCode(t){switch(this.mode){case e.MODE_CLASSIC_300:case e.MODE_GEEK_300:case e.MODE_GEEKER_300:case e.RAINBOW_MODE_GEEKEST_300:case e.MODE_CLASSIC_MRT:case e.MODE_GEEK_MRT:case e.VINIL_MODE_GEEKER_MRT:case e.MODE_GEEKEST_MRT:return e.ES_300_CHUNK+t.replace(/attribute/g,"in");default:return t}}preprocessFragmentCode(t){let i="",s="",n="",r="";switch(this.mode){case e.MODE_GEEKER:s=e.GEEKER_CHUNK;break;case e.MODE_GEEKEST:s=e.GEEKEST_CHUNK,n="void main(){\n",r="\n}";break;case e.MODE_CLASSIC_300:case e.MODE_GEEK_300:case e.MODE_CLASSIC_MRT:case e.MODE_GEEK_MRT:i=e.ES_300_CHUNK;break;case e.MODE_GEEKER_300:i=e.ES_300_CHUNK,s=e.GEEKER_CHUNK.substr(0,e.GEEKER_CHUNK.length-1)+e.GEEKER_OUT_CHUNK;break;case e.VINIL_MODE_GEEKER_MRT:i=e.ES_300_CHUNK,s=e.GEEKER_MRT_CHUNK.substr(0,e.GEEKER_MRT_CHUNK.length-1)+e.GEEKER_OUT_MRT_CHUNK;break;case e.RAINBOW_MODE_GEEKEST_300:i=e.ES_300_CHUNK,s=e.GEEKEST_CHUNK.substr(0,e.GEEKEST_CHUNK.length-1)+e.GEEKEST_OUT_CHUNK,n="void main(){\n",r="\n}";break;case e.MODE_GEEKEST_MRT:i=e.ES_300_CHUNK,s=e.GEEKEST_MRT_CHUNK.substr(0,e.GEEKEST_MRT_CHUNK.length-1)+e.GEEKEST_OUT_MRT_CHUNK,n="void main(){\n",r="\n}"}return i+s+n+t+r}formatErrorMessage(i){let s=0,n=t.split("\n").length;switch(this.mode){case e.MODE_CLASSIC:case e.MODE_GEEK:s=0;break;case e.MODE_GEEKER:s+=1;break;case e.MODE_GEEKEST:s+=3+n;break;case e.MODE_CLASSIC_300:case e.MODE_GEEK_300:case e.MODE_CLASSIC_MRT:case e.MODE_GEEK_MRT:s+=1;break;case e.MODE_GEEKER_300:case e.VINIL_MODE_GEEKER_MRT:s+=2;break;case e.RAINBOW_MODE_GEEKEST_300:case e.MODE_GEEKEST_MRT:s+=4+n}return i.replace(/^ERROR: (\d+):(\d+)/gm,(function(){const t=parseInt(arguments.length<=2?void 0:arguments[2])-s;return`ERROR: ${arguments.length<=1?void 0:arguments[1]}:${t}`}))}}function i(){const t=new Date;return`${(new Array(2).join("0")+t.getHours()).substr(-2,2)}:${(new Array(2).join("0")+t.getMinutes()).substr(-2,2)}`}let s=null,n=null,r=e.RAINBOW_MODE_GEEKEST_300,o="",a=null;function h(){const t=document.querySelector("#webgl"),e=t.parentElement.getBoundingClientRect();t.width=e.width,t.height=e.height}window.addEventListener("load",(()=>{setTimeout((()=>{if(s=document.querySelector("#webgl"),null==s)return;n=document.querySelector("#canvaswrap");const t=e.DEFAULT_SOURCE;o=t[r],window.addEventListener("resize",(()=>{h()}),!1),h();const i={target:s,eventTarget:window,mouse:!0,resize:!0,escape:!1};if(a=new e(i),a.onDraw((()=>{})),a.mode=r,a.render(o),!0!==a.isWebGL2)for(let t=0;t<null.children.length;++t)null.children[t].disabled=e.RAINBOW_MODE_GEEKEST_300.includes(t);h(),a.rect()}),3e3)}))})();
//# sourceMappingURL=script.js.map