{"version":3,"file":"script.js","mappings":"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","sources":["webpack:///./fragmen.js","webpack:///./script.js"],"sourcesContent":["\nimport noise from './shader_snippet/noise.glsl';\n\nexport class Fragmen {\n    \n    \n    static get RAINBOW_MODE_GEEKEST_300(){return 0;}\n    static get VINIL_MODE_GEEKER_MRT(){return 1;}\n    \n    static get DEFAULT_SOURCE(){\n        // MRT declaration\n        let declareOutColor = '';\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            declareOutColor += `layout (location = ${i}) out vec4 outColor${i};\\n`;\n        }\n        let declareO = '';\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            declareO += `layout (location = ${i}) out vec4 o${i};\\n`;\n        }\n        let outColor = '';\n        for(let i = 1; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            outColor += `outColor${i}=outColor0;`;\n        }\n        let o = '';\n        for(let i = 1; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            o += `o${i}=o0;`;\n        }\n        // sources\n        const geekest300 = `vec2 p=(FC.xy*2.-r)/r.y,x,d;for(float i=1.-fract(t);i<25.;i+=.5)x=p+(cos(i*vec2(.8,.5)+t)+vec2(0,4.-i))/i,d=vec2(4,sin(i)*.4)/i,o+=(cos(i+vec4(0,2,4,0))+1.)/(length(x-d*clamp(dot(x,d)/dot(d,d),-1.,1.))+i/1e3)/max(i*i,5.)*.1;`;\n        const geekestMRT = `vec2 i=r/r,p=(FC.xy-r/vec2(-9,9))*mat2(2,1,-2,4)/4e1,l=p/p*length(p);o1+=(snoise2D(l)+snoise2D(p*rotate2D(t*.1))*.3)/l.x*vec4(70,40,30,1);p=p.yy/1e2;for(vec4 S;i.x<16.;i+=1./i)p*=rotate2D(2.4),S=texture(b1,FC.xy/r+p*i/r),o0+=S*=S*=S*=S;o0=sqrt(sqrt(o0)*.1);`;\n        return [geekest300, geekestMRT];\n    }\n    /**\n     * GLSL ES 3.0 の場合に付与されるバージョンディレクティブ\n     * @type {string}\n     */\n    static get ES_300_CHUNK(){return '#version 300 es\\n';}\n    /**\n     * ギーカーモード時に先頭に付与されるフラグメントシェーダのコード\n     * @type {string}\n     */\n    static get GEEKER_CHUNK(){return 'precision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;uniform sampler2D b;\\n';}\n    /**\n     * ギーカーモード + ES 3.0 の場合に付与される out 修飾子付き変数のコード\n     * @type {string}\n     */\n    static get GEEKER_OUT_CHUNK(){return 'out vec4 o;\\n';}\n    /**\n     * ギーカーモード + MRT 時に先頭に付与されるフラグメントシェーダのコード\n     * @type {string}\n     */\n    static get GEEKER_MRT_CHUNK(){\n        const chunk = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            chunk.push(`uniform sampler2D b${i};`);\n        }\n        return `precision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;${chunk.join('')}\\n`;\n    }\n    /**\n     * ギーカーモード + ES 3.0 + MRT の場合に付与される out 修飾子付き変数のコード\n     * @type {string}\n     */\n    static get GEEKER_OUT_MRT_CHUNK(){\n        const chunk = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            chunk.push(`layout (location = ${i}) out vec4 o${i};`);\n        }\n        return `${chunk.join('')}\\n`;\n    }\n    /**\n     * ギーケストモード時に先頭に付与されるフラグメントシェーダのコード\n     * @type {string}\n     */\n    static get GEEKEST_CHUNK(){\n        return `#define FC gl_FragCoord\nprecision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;uniform sampler2D b;\n${noise}\\n`;\n    }\n    /**\n     * ギーケストモード + ES 3.0 の場合に付与される out 修飾子付き変数のコード\n     * @type {string}\n     */\n    static get GEEKEST_OUT_CHUNK(){return 'out vec4 o;\\n';}\n    /**\n     * ギーケストモード + ES 3.0 + MRT の場合に先頭に付与されるフラグメントシェーダのコード\n     * @type {string}\n     */\n    static get GEEKEST_MRT_CHUNK(){\n        const chunk = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            chunk.push(`uniform sampler2D b${i};`);\n        }\n        return `#define FC gl_FragCoord\nprecision highp float;uniform vec2 r;uniform vec2 m;uniform float t;uniform float f;uniform float s;${chunk.join('')}\n${noise}\\n`;\n    }\n    /**\n     * ギーケストモード + ES 3.0 + MRT の場合に付与される layout out 修飾子付き変数のコード\n     * @type {string}\n     */\n    static get GEEKEST_OUT_MRT_CHUNK(){\n        const chunk = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n            chunk.push(`layout (location = ${i}) out vec4 o${i};`);\n        }\n        return `${chunk.join('')}\\n`;\n    }\n\n    /**\n     * constructor of fragmen.js\n     * @param {object} option - オプション\n     * @property {HTMLElement} option.target - insert canvas to\n     * @property {HTMLElement} [option.eventTarget=target] - event target element or window\n     * @property {boolean} [option.mouse=false] - mouse event enable\n     * @property {boolean} [option.escape=false] - keydown event enable\n     * @property {boolean} [option.resize=false] - resize event enable\n     */\n    constructor(option){\n        /**\n         * WebGL コンテキストに紐づく canvas の挿入先となるエレメント\n         * @type {HTMLElement}\n         */\n        this.target = null;\n        /**\n         * マウスイベントの対象となるエレメント（もしくは window）\n         * @type {window|HTMLElement}\n         */\n        this.eventTarget = null;\n        /**\n         * WebGL コンテキストに紐づく canvas\n         * @type {HTMLCanvasElement}\n         */\n        this.canvas = null;\n        /**\n         * WebGL 2.0 で初期化できたかどうか\n         * @type {boolean}\n         */\n        this.isWebGL2 = false;\n        /**\n         * WebGL のレンダリングコンテキスト\n         * @type {WebGLRenderingContext}\n         */\n        this.gl = null;\n        /**\n         * リサイズが発生したかどうかのフラグ\n         * @type {boolean}\n         */\n        this.resize = false;\n        /**\n         * コンテキストの幅\n         * @type {number}\n         */\n        this.width  = 0;\n        /**\n         * コンテキストの高さ\n         * @type {number}\n         */\n        this.height = 0;\n        /**\n         * マウスカーソルの座標\n         * @type {Array.<number>}\n         */\n        this.mousePosition = [0.0, 0.0];\n        /**\n         * 現在設定されているモード\n         * @type {number}\n         */\n        this.mode = Fragmen.MODE_CLASSIC;\n        /**\n         * アニメーションさせるかどうかのフラグ（コンパイルは普通に行うが描画だけを止める）\n         * @type {boolean}\n         */\n        this.animation = true;\n        /**\n         * 実行中かどうかのフラグ\n         * @type {boolean}\n         */\n        this.run = false;\n        /**\n         * レンダリングを開始した時点でのタイムスタンプ\n         * @type {number}\n         */\n        this.startTime = 0;\n        /**\n         * レンダリング開始からの経過時間（秒）\n         * @type {number}\n         */\n        this.nowTime = 0;\n        /**\n         * レンダリング開始からの経過フレーム数\n         * @type {number}\n         */\n        this.frameCount = 0;\n        /**\n         * シェーダプログラム\n         * @type {WebGLProgram}\n         */\n        this.program = null;\n        /**\n         * uniform ロケーション\n         * @type {object}\n         */\n        this.uniLocation = null;\n        /**\n         * attribute ロケーション\n         * @type {object}\n         */\n        this.attLocation = null;\n        /**\n         * Onomat.js からの周波数の入力値\n         * @type {number}\n         */\n        this.frequency = 0;\n        /**\n         * 頂点シェーダのソースコード\n         * @type {string}\n         */\n        this.VS = '';\n        /**\n         * フラグメントシェーダのソースコード\n         * @type {string}\n         */\n        this.FS = '';\n        /**\n         * 転写用シェーダのプログラム\n         * @type {WebGLProgram}\n         */\n        this.postProgram = null;\n        /**\n         * 転写用シェーダの uniform ロケーション\n         * @type {object}\n         */\n        this.postUniLocation = null;\n        /**\n         * 転写用シェーダの attribute ロケーション\n         * @type {object}\n         */\n        this.postAttLocation = null;\n        /**\n         * 転写用シェーダの頂点シェーダのソースコード\n         * @type {string}\n         */\n        this.postVS = '';\n        /**\n         * 転写用シェーダのフラグメントシェーダのソースコード\n         * @type {string}\n         */\n        this.postFS = '';\n        /**\n         * バッファリング用フレームバッファ\n         * @type {WebGLFrameBuffer}\n         */\n        this.fFront = null;\n        /**\n         * バッファリング用フレームバッファ\n         * @type {WebGLFrameBuffer}\n         */\n        this.fBack = null;\n        /**\n         * バッファリング用フレームバッファ\n         * @type {WebGLFrameBuffer}\n         */\n        this.fTemp = null;\n        /**\n         * MRT で gl.drawBuffers に指定するアタッチメント用定数を格納する配列\n         * @type {Array.<number>}\n         */\n        this.buffers = null;\n\n        // self binding\n        this.render    = this.render.bind(this);\n        this.rect      = this.rect.bind(this);\n        this.reset     = this.reset.bind(this);\n        this.draw      = this.draw.bind(this);\n        this.mouseMove = this.mouseMove.bind(this);\n        this.keyDown   = this.keyDown.bind(this);\n        // initial call\n        this.init(option);\n    }\n\n    /**\n     * initialize fragmen.js\n     * @param {object} option - options\n     */\n    init(option){\n        // option check\n        if(option === null || option === undefined){return;}\n        if(!option.hasOwnProperty('target') || option.target === null || option.target === undefined){return;}\n        if(!(option.target instanceof HTMLElement)){return;}\n        // init canvas\n        this.target = this.eventTarget = option.target;\n        if(this.target.tagName.match(/canvas/i)){\n            this.canvas = this.target;\n        }else{\n            this.canvas = document.createElement('canvas');\n            this.target.appendChild(this.canvas);\n        }\n        // init webgl context\n        const opt = {alpha: false, preserveDrawingBuffer: true};\n        this.gl = this.canvas.getContext('webgl2', opt);\n        this.isWebGL2 = this.gl != null;\n        if(this.isWebGL2 !== true){\n            this.gl = this.canvas.getContext('webgl', opt);\n            this.gl.getExtension('OES_standard_derivatives');\n        }\n        if(this.gl == null){\n            console.log('webgl unsupported');\n            return;\n        }\n        // check event\n        if(option.hasOwnProperty('eventTarget') && option.eventTarget !== null && option.eventTarget !== undefined){\n            this.eventTarget = option.eventTarget;\n        }\n        if(option.hasOwnProperty('mouse') && option.mouse === true){\n            this.eventTarget.addEventListener('pointermove', this.mouseMove, false);\n        }\n        if(option.hasOwnProperty('escape') && option.escape === true){\n            window.addEventListener('keydown', this.keyDown, false);\n        }\n        if(option.hasOwnProperty('resize') && option.resize === true){\n            this.resize = true;\n            window.addEventListener('resize', this.rect, false);\n        }\n        // render initial\n        this.VS = 'attribute vec3 p;void main(){gl_Position=vec4(p,1.);}';\n        this.postVS = `\nattribute vec3 position;\nvarying   vec2 vTexCoord;\nvoid main(){\n    vTexCoord   = (position + 1.0).xy / 2.0;\n    gl_Position = vec4(position, 1.0);\n}`;\n        this.postFS = `\nprecision mediump float;\nuniform sampler2D texture;\nvarying vec2      vTexCoord;\nvoid main(){\n    gl_FragColor = texture2D(texture, vTexCoord);\n}`;\n        this.postProgram = this.gl.createProgram();\n        let vs = this.createShader(this.postProgram, 0, this.postVS);\n        let fs = this.createShader(this.postProgram, 1, this.postFS);\n        this.gl.linkProgram(this.postProgram);\n        this.gl.deleteShader(vs);\n        this.gl.deleteShader(fs);\n        this.postUniLocation = {};\n        this.postUniLocation.texture = this.gl.getUniformLocation(this.postProgram, 'texture');\n        this.postAttLocation = this.gl.getAttribLocation(this.postProgram, 'position');\n\n        this.post300VS = `#version 300 es\nin  vec3 position;\nout vec2 vTexCoord;\nvoid main(){\n    vTexCoord   = (position + 1.0).xy / 2.0;\n    gl_Position = vec4(position, 1.0);\n}`;\n        this.post300FS = `#version 300 es\nprecision mediump float;\nuniform sampler2D drawTexture;\nin vec2 vTexCoord;\nlayout (location = 0) out vec4 outColor;\nvoid main(){\n    outColor = texture(drawTexture, vTexCoord);\n}`;\n        if(this.isWebGL2 === true){\n            this.post300Program = this.gl.createProgram();\n            vs = this.createShader(this.post300Program, 0, this.post300VS);\n            fs = this.createShader(this.post300Program, 1, this.post300FS);\n            this.gl.linkProgram(this.post300Program);\n            this.gl.deleteShader(vs);\n            this.gl.deleteShader(fs);\n            this.post300UniLocation = {};\n            this.post300UniLocation.texture = this.gl.getUniformLocation(this.post300Program, 'drawTexture');\n            this.post300AttLocation = this.gl.getAttribLocation(this.post300Program, 'position');\n        }\n\n        this.fFront = this.fBack = this.fTemp = null;\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.gl.createBuffer());\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([-1,1,0,-1,-1,0,1,1,0,1,-1,0]), this.gl.STATIC_DRAW);\n        this.gl.disable(this.gl.DEPTH_TEST);\n        this.gl.disable(this.gl.CULL_FACE);\n        this.gl.disable(this.gl.BLEND);\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    }\n\n    /**\n     * rendering hub\n     * @param {string} source - fragment shader source\n     * @return {object} instance\n     */\n    render(source){\n        if(source === null || source === undefined || source === ''){\n            if(this.FS === ''){return;}\n        }else{\n            this.FS = source;\n        }\n        this.reset();\n        return this;\n    }\n\n    /**\n     * set rect\n     */\n    rect(){\n        const bound = this.target.getBoundingClientRect();\n        this.width = bound.width;\n        this.height = bound.height;\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.resetBuffer(this.fFront);\n        this.resetBuffer(this.fBack);\n        this.resetBuffer(this.fTemp);\n        switch(this.mode){\n            case Fragmen.MODE_CLASSIC_MRT:\n            case Fragmen.MODE_GEEK_MRT:\n            case Fragmen.VINIL_MODE_GEEKER_MRT:\n            case Fragmen.MODE_GEEKEST_MRT:\n                this.fFront = this.createFramebufferMRT(this.width, this.height, Fragmen.MRT_TARGET_COUNT);\n                this.fBack = this.createFramebufferMRT(this.width, this.height, Fragmen.MRT_TARGET_COUNT);\n                break;\n            default:\n                this.fFront = this.createFramebuffer(this.width, this.height);\n                this.fBack = this.createFramebuffer(this.width, this.height);\n        }\n        this.gl.viewport(0, 0, this.width, this.height);\n    }\n\n    /**\n     * reset renderer\n     */\n    reset(){\n        this.rect();\n        let program = this.gl.createProgram();\n        let vs = this.createShader(program, 0, this.preprocessVertexCode(this.VS));\n        if(vs === false){\n            return;\n        }\n        let fs = this.createShader(program, 1, this.preprocessFragmentCode(this.FS));\n        if(fs === false){\n            this.gl.deleteShader(vs);\n            return;\n        }\n        this.gl.linkProgram(program);\n        this.gl.deleteShader(vs);\n        this.gl.deleteShader(fs);\n        if(!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)){\n            let msg = this.gl.getProgramInfoLog(program);\n            msg = this.formatErrorMessage(msg);\n            console.warn(msg);\n            if(this.onBuildCallback != null){\n                const t = getTimeString();\n                this.onBuildCallback('error', ` ● [ ${t} ] ${msg}`);\n            }\n            program = null;\n            return;\n        }\n        let resolution = 'resolution';\n        let mouse      = 'mouse';\n        let time       = 'time';\n        let frame      = 'frame';\n        let sound      = 'sound';\n        let backbuffer = 'backbuffer';\n        let mrtBuffers = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){mrtBuffers.push(`backbuffer${i}`);}\n        let mrtShortBuffers = [];\n        for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){mrtShortBuffers.push(`b${i}`);}\n        if(\n            this.mode === Fragmen.MODE_GEEK ||\n            this.mode === Fragmen.MODE_GEEKER ||\n            this.mode === Fragmen.MODE_GEEKEST ||\n            this.mode === Fragmen.MODE_GEEK_300 ||\n            this.mode === Fragmen.MODE_GEEKER_300 ||\n            this.mode === Fragmen.RAINBOW_MODE_GEEKEST_300 ||\n            this.mode === Fragmen.MODE_GEEK_MRT ||\n            this.mode === Fragmen.VINIL_MODE_GEEKER_MRT ||\n            this.mode === Fragmen.MODE_GEEKEST_MRT\n        ){\n            resolution = 'r';\n            mouse      = 'm';\n            time       = 't';\n            frame      = 'f';\n            sound      = 's';\n            backbuffer = 'b';\n        }\n        if(this.program != null){this.gl.deleteProgram(this.program);}\n        this.program = program;\n        this.gl.useProgram(this.program);\n        this.uniLocation = {};\n        this.uniLocation.resolution = this.gl.getUniformLocation(this.program, resolution);\n        this.uniLocation.mouse = this.gl.getUniformLocation(this.program, mouse);\n        this.uniLocation.time = this.gl.getUniformLocation(this.program, time);\n        this.uniLocation.frame = this.gl.getUniformLocation(this.program, frame);\n        this.uniLocation.sound = this.gl.getUniformLocation(this.program, sound);\n        switch(this.mode){\n            case Fragmen.MODE_CLASSIC_MRT:\n                for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n                    this.uniLocation[`sampler${i}`] = this.gl.getUniformLocation(this.program, mrtBuffers[i]);\n                }\n                break;\n            case Fragmen.MODE_GEEK_MRT:\n            case Fragmen.VINIL_MODE_GEEKER_MRT:\n            case Fragmen.MODE_GEEKEST_MRT:\n                for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n                    this.uniLocation[`sampler${i}`] = this.gl.getUniformLocation(this.program, mrtShortBuffers[i]);\n                }\n                break;\n            default:\n                this.uniLocation.sampler = this.gl.getUniformLocation(this.program, backbuffer);\n        }\n        this.attLocation = this.gl.getAttribLocation(this.program, 'p');\n        this.mousePosition = [0.0, 0.0];\n        this.startTime = Date.now();\n        this.frameCount = 0;\n        if(!this.run){\n            this.run = true;\n            this.draw();\n        }\n    }\n\n    /**\n     * rendering\n     */\n    draw(){\n        if(!this.run){return;}\n        if(this.animation === true){\n            requestAnimationFrame(this.draw);\n        }\n        this.nowTime = (Date.now() - this.startTime) * 0.001;\n        ++this.frameCount;\n        this.gl.useProgram(this.program);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fFront.f);\n        if(Array.isArray(this.fBack.t) === true){\n            this.gl.drawBuffers(this.buffers);\n            for(let i = 0; i < Fragmen.MRT_TARGET_COUNT; ++i){\n                this.gl.activeTexture(this.gl.TEXTURE0 + i);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.fBack.t[i]);\n                this.gl.uniform1i(this.uniLocation[`sampler${i}`], i);\n            }\n        }else{\n            this.gl.activeTexture(this.gl.TEXTURE0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.fBack.t);\n            this.gl.uniform1i(this.uniLocation.sampler, 0);\n        }\n        this.gl.enableVertexAttribArray(this.attLocation);\n        this.gl.vertexAttribPointer(this.attLocation, 3, this.gl.FLOAT, false, 0, 0);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        this.gl.uniform2fv(this.uniLocation.mouse, this.mousePosition);\n        this.gl.uniform1f(this.uniLocation.time, this.nowTime);\n        this.gl.uniform1f(this.uniLocation.frame, this.frameCount);\n        this.gl.uniform2fv(this.uniLocation.resolution, [this.width, this.height]);\n        this.gl.uniform1f(this.uniLocation.sound, this.frequency);\n        this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n\n        if(Array.isArray(this.fBack.t) === true){\n            this.gl.useProgram(this.post300Program);\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n            this.gl.activeTexture(this.gl.TEXTURE0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.fFront.t[0]);\n            this.gl.enableVertexAttribArray(this.post300AttLocation);\n            this.gl.vertexAttribPointer(this.post300AttLocation, 3, this.gl.FLOAT, false, 0, 0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.uniform1i(this.post300UniLocation.texture, 0);\n        }else{\n            this.gl.useProgram(this.postProgram);\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n            this.gl.activeTexture(this.gl.TEXTURE0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.fFront.t);\n            this.gl.enableVertexAttribArray(this.postAttLocation);\n            this.gl.vertexAttribPointer(this.postAttLocation, 3, this.gl.FLOAT, false, 0, 0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.uniform1i(this.postUniLocation.texture, 0);\n        }\n        this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n\n        this.gl.flush();\n        this.fTemp = this.fFront;\n        this.fFront = this.fBack;\n        this.fBack = this.fTemp;\n\n        if(this.onDrawCallback != null){\n            this.onDrawCallback();\n        }\n    }\n\n    /**\n     * create and compile shader\n     * @param {WebGLProgram} p - target program object\n     * @param {number} i - 0 or 1, 0 is vertex shader compile mode\n     * @param {string} j - shader source\n     * @return {boolean|WebGLShader} compiled shader object or false\n     */\n    createShader(p, i, j){\n        if(!this.gl){return false;}\n        const k = this.gl.createShader(this.gl.VERTEX_SHADER - i);\n        this.gl.shaderSource(k, j);\n        this.gl.compileShader(k);\n        const t = getTimeString();\n        if(!this.gl.getShaderParameter(k, this.gl.COMPILE_STATUS)){\n            let msg = this.gl.getShaderInfoLog(k);\n            msg = this.formatErrorMessage(msg);\n            console.warn(msg);\n            if(this.onBuildCallback != null){\n                this.onBuildCallback('error', ` ● [ ${t} ] ${msg}`);\n            }\n            return false;\n        }\n        if(this.onBuildCallback != null){\n            this.onBuildCallback('success', ` ● [ ${t} ] shader compile succeeded`);\n        }\n        this.gl.attachShader(p, k);\n        const l = this.gl.getShaderInfoLog(k);\n        if(l !== ''){console.info('shader info: ' + l);}\n        return k;\n    }\n\n    /**\n     * create framebuffer\n     * @param {number} width - set to framebuffer width\n     * @param {number} height - set to framebuffer height\n     * @return {object} custom object\n     * @property {WebGLFramebuffer} f\n     * @property {WebGLRenderbuffer} d\n     * @property {WebGLTexture} t\n     */\n    createFramebuffer(width, height){\n        const frameBuffer = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frameBuffer);\n        const depthRenderBuffer = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, depthRenderBuffer);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n        this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, depthRenderBuffer);\n        const fTexture = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, fTexture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, width, height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, fTexture, 0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, null);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n        return {f: frameBuffer, d: depthRenderBuffer, t: fTexture};\n    }\n\n    /**\n     * create framebuffer\n     * @param {number} width - set to framebuffer width\n     * @param {number} height - set to framebuffer height\n     * @param {number} count - colorbuffer count\n     * @return {object} custom object\n     * @property {WebGLFramebuffer} f\n     * @property {WebGLRenderbuffer} d\n     * @property {WebGLTexture} t\n     */\n    createFramebufferMRT(width, height, count){\n        const frameBuffer = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frameBuffer);\n        const depthRenderBuffer = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, depthRenderBuffer);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n        this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, depthRenderBuffer);\n        const fTexture = [];\n        this.buffers = [];\n        for(let i = 0; i < count; ++i){\n            const tex = this.gl.createTexture();\n            this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, width, height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, tex, 0);\n            fTexture.push(tex);\n            this.buffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, null);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n        return {f: frameBuffer, d: depthRenderBuffer, t: fTexture};\n    }\n\n    /**\n     * framebuffer reset\n     * @param {object} obj - custom object(this.createFramebuffer return value)\n     */\n    resetBuffer(obj){\n        if(!this.gl || !obj){return;}\n        if(obj.hasOwnProperty('f') && obj.f != null && this.gl.isFramebuffer(obj.f)){\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n            this.gl.deleteFramebuffer(obj.f);\n            obj.f = null;\n        }\n        if(obj.hasOwnProperty('d') && obj.d != null && this.gl.isRenderbuffer(obj.d)){\n            this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, null);\n            this.gl.deleteRenderbuffer(obj.d);\n            obj.d = null;\n        }\n        if(obj.hasOwnProperty('t') && Array.isArray(obj.t) === true){\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n            obj.t.forEach((texture) => {\n                this.gl.deleteTexture(texture);\n                texture = null;\n            });\n        }else if(obj.hasOwnProperty('t') && obj.t != null && this.gl.isTexture(obj.t)){\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n            this.gl.deleteTexture(obj.t);\n            obj.t = null;\n        }\n        obj = null;\n    }\n\n    /**\n     * mouse event\n     */\n    mouseMove(eve){\n        if(eve.clientY > this.target.height){return;}\n        const x = Math.min(eve.clientX, this.target.width);\n        const y = Math.min(eve.clientY, this.target.height);\n        this.mousePosition = [x / this.target.width, 1.0 - y / this.target.height];\n    }\n\n    /**\n     * key event\n     */\n    keyDown(eve){\n        if(this.gl === null){return;}\n        this.run = (eve.keyCode !== 27);\n    }\n\n    /**\n     * ビルド完了時に呼ばれるコールバックを登録する\n     * @param {function}\n     */\n    onBuild(callback){\n        this.onBuildCallback = callback;\n    }\n    /**\n     * 描画完了時に呼ばれるコールバックを登録する\n     * @param {function}\n     */\n    onDraw(callback){\n        this.onDrawCallback = callback;\n    }\n\n    /**\n     * 周波数を更新する\n     * @param {number} frequency - 周波数（正確ではないがここでは音量の意味）\n     */\n    setFrequency(frequency){\n        this.frequency = frequency;\n    }\n\n    /**\n     * アニメーションさせるかどうかを設定する\n     * @param {boolean} animate - アニメーションさせるかどうかの真偽値\n     */\n    setAnimation(animate){\n        this.animation = animate;\n    }\n\n    /**\n     * this.mode により適切にコードを変換する\n     * @private\n     * @param {string} source - 対象となる頂点シェーダのソースコード\n     */\n    preprocessVertexCode(source){\n        switch(this.mode){\n            case Fragmen.MODE_CLASSIC_300:\n            case Fragmen.MODE_GEEK_300:\n            case Fragmen.MODE_GEEKER_300:\n            case Fragmen.RAINBOW_MODE_GEEKEST_300:\n            case Fragmen.MODE_CLASSIC_MRT:\n            case Fragmen.MODE_GEEK_MRT:\n            case Fragmen.VINIL_MODE_GEEKER_MRT:\n            case Fragmen.MODE_GEEKEST_MRT:\n                return Fragmen.ES_300_CHUNK + source.replace(/attribute/g, 'in');\n            default:\n                return source;\n        }\n    }\n\n    /**\n     * this.mode により適切にコードを変換する\n     * @private\n     * @param {string} code - 対象となるフラグメントシェーダのソースコード\n     */\n    preprocessFragmentCode(code){\n        let chunk300 = '';\n        let chunkOut = '';\n        let chunkMain = ''\n        let chunkClose = ''\n        switch(this.mode){\n            case Fragmen.MODE_GEEKER:\n                chunkOut = Fragmen.GEEKER_CHUNK;\n                break;\n            case Fragmen.MODE_GEEKEST:\n                chunkOut = Fragmen.GEEKEST_CHUNK;\n                chunkMain = 'void main(){\\n'\n                chunkClose = '\\n}'\n                break;\n            case Fragmen.MODE_CLASSIC_300:\n            case Fragmen.MODE_GEEK_300:\n            case Fragmen.MODE_CLASSIC_MRT:\n            case Fragmen.MODE_GEEK_MRT:\n                chunk300 = Fragmen.ES_300_CHUNK;\n                break;\n            case Fragmen.MODE_GEEKER_300:\n                chunk300 = Fragmen.ES_300_CHUNK;\n                chunkOut = Fragmen.GEEKER_CHUNK.substr(0, Fragmen.GEEKER_CHUNK.length - 1) + Fragmen.GEEKER_OUT_CHUNK;\n                break;\n            case Fragmen.VINIL_MODE_GEEKER_MRT:\n                chunk300 = Fragmen.ES_300_CHUNK;\n                chunkOut = Fragmen.GEEKER_MRT_CHUNK.substr(0, Fragmen.GEEKER_MRT_CHUNK.length - 1) + Fragmen.GEEKER_OUT_MRT_CHUNK;\n                break;\n            case Fragmen.RAINBOW_MODE_GEEKEST_300:\n                chunk300 = Fragmen.ES_300_CHUNK;\n                chunkOut = Fragmen.GEEKEST_CHUNK.substr(0, Fragmen.GEEKEST_CHUNK.length - 1) + Fragmen.GEEKEST_OUT_CHUNK;\n                chunkMain = 'void main(){\\n'\n                chunkClose = '\\n}'\n                break;\n            case Fragmen.MODE_GEEKEST_MRT:\n                chunk300 = Fragmen.ES_300_CHUNK;\n                chunkOut = Fragmen.GEEKEST_MRT_CHUNK.substr(0, Fragmen.GEEKEST_MRT_CHUNK.length - 1) + Fragmen.GEEKEST_OUT_MRT_CHUNK;\n                chunkMain = 'void main(){\\n'\n                chunkClose = '\\n}'\n                break;\n            default:\n                break;\n        }\n        return chunk300 + chunkOut + chunkMain + code + chunkClose;\n    }\n\n    /**\n     * this.mode に応じてエラー行番号をインクリメントする\n     * @param {string} message\n     * @private\n     */\n    formatErrorMessage(message){\n        let dec = 0;\n        let noiseDec = noise.split('\\n').length;\n        switch(this.mode){\n            case Fragmen.MODE_CLASSIC:\n            case Fragmen.MODE_GEEK:\n                dec = 0;\n                break;\n            case Fragmen.MODE_GEEKER:\n                dec += 1;\n                break;\n            case Fragmen.MODE_GEEKEST:\n                dec += 3 + noiseDec;\n                break;\n            case Fragmen.MODE_CLASSIC_300:\n            case Fragmen.MODE_GEEK_300:\n            case Fragmen.MODE_CLASSIC_MRT:\n            case Fragmen.MODE_GEEK_MRT:\n                dec += 1;\n                break;\n            case Fragmen.MODE_GEEKER_300:\n                dec += 2;\n                break;\n            case Fragmen.VINIL_MODE_GEEKER_MRT:\n                dec += 2;\n                break;\n            case Fragmen.RAINBOW_MODE_GEEKEST_300:\n                dec += 4 + noiseDec;\n                break;\n            case Fragmen.MODE_GEEKEST_MRT:\n                dec += 4 + noiseDec;\n                break;\n        }\n        return message.replace(/^ERROR: (\\d+):(\\d+)/gm, (...args) => {\n            const line = parseInt(args[2]) - dec;\n            return `ERROR: ${args[1]}:${line}`;\n        });\n    }\n}\n\n/**\n * 時刻を常に２桁に揃える\n * @return {string}\n */\nfunction getTimeString(){\n    const d = new Date();\n    const h = (new Array(2).join('0') + d.getHours()).substr(-2, 2);\n    const m = (new Array(2).join('0') + d.getMinutes()).substr(-2, 2);\n    return `${h}:${m}`;\n}\n\n","\n// import \"whatwg-fetch\";\n// import Promise from \"promise-polyfill\";\nimport {Fragmen} from \"./fragmen.js\";\n\nlet canvas = null;\nlet mode = null;\nlet canvasWrap = null;\n\n// let currentMode        = Fragmen.VINIL_MODE_GEEKER_MRT;\nlet currentMode = Fragmen.RAINBOW_MODE_GEEKEST_300;\nlet currentSource = \"\";\nlet fragmen = null;\n\n// fragmen.js\nconst FRAGMEN_OPTION = {\n    target: null,\n    eventTarget: null,\n    mouse: true,\n    resize: true,\n    escape: false\n}\n\nwindow.addEventListener(\"load\", () => {\n    setTimeout(() => {\n        canvas = document.querySelector(\"#webgl\");\n        if (canvas === null || canvas === undefined) {\n            return;\n        }\n        canvasWrap = document.querySelector(\"#canvaswrap\");\n    \n        const fragmenDefaultSource = Fragmen.DEFAULT_SOURCE;\n        currentSource = fragmenDefaultSource[currentMode];\n    \n        window.addEventListener(\"resize\", () => {\n            resize();\n        }, false);\n    \n        resize();\n    \n        const option = {\n            target: canvas,\n            eventTarget: window,\n            mouse: true,\n            resize: true,\n            escape: false\n        }\n    \n        fragmen = new Fragmen(option);\n    \n        fragmen.onDraw(() => {\n            let freq = 0.0;\n    \n            if(freq > 0.0){\n                fragmen.setFrequency(freq);\n            }\n        });\n    \n        fragmen.mode = currentMode;\n        fragmen.render(currentSource);\n    \n        // WebGL 2.0 に対応しているかどうかによりドロップダウンリストの状態を変更\n        if(fragmen.isWebGL2 !== true){\n            for(let i = 0; i < mode.children.length; ++i){\n                mode.children[i].disabled = Fragmen.RAINBOW_MODE_GEEKEST_300.includes(i);\n            }\n        }\n    \n        toggleLayerView();\n        \n    }, 3000);\n\n\n    // window.addEventListener(\"scroll\", toggleNav);\n\n\n});\n\n\nfunction resize(){\n    const canvas = document.querySelector(\"#webgl\");\n    const bound = canvas.parentElement.getBoundingClientRect();\n    canvas.width = bound.width;\n    canvas.height = bound.height;\n}\n\n\nfunction toggleLayerView(){\n    resize();\n    fragmen.rect();\n\n}\n\n// function toggleNav(evento) {\n\n//     if (window.scrollY > 300) {\n//         console.log(\"AAAA\");\n\n        \n//         let nav = document.getElementById(\"navi\");\n//         if (nav.classList.contains(\"contract-nav-animation\") === false) {\n//             let menu = document.getElementById(\"menu-list\");\n            \n//             if (menu.classList.contains(\"opacity-menu-botons-animation\") === false) {\n//                 menu.classList.add(\"opacity-menu-botons-animation\");\n\n//             }\n            \n//             nav.classList.add(\"contract-nav-animation\");\n            \n//         }\n\n//     }\n\n// }\n"],"names":["Fragmen","RAINBOW_MODE_GEEKEST_300","VINIL_MODE_GEEKER_MRT","DEFAULT_SOURCE","declareOutColor","i","MRT_TARGET_COUNT","declareO","outColor","o","ES_300_CHUNK","GEEKER_CHUNK","GEEKER_OUT_CHUNK","GEEKER_MRT_CHUNK","chunk","push","join","GEEKER_OUT_MRT_CHUNK","GEEKEST_CHUNK","noise","GEEKEST_OUT_CHUNK","GEEKEST_MRT_CHUNK","GEEKEST_OUT_MRT_CHUNK","constructor","option","this","target","eventTarget","canvas","isWebGL2","gl","resize","width","height","mousePosition","mode","MODE_CLASSIC","animation","run","startTime","nowTime","frameCount","program","uniLocation","attLocation","frequency","VS","FS","postProgram","postUniLocation","postAttLocation","postVS","postFS","fFront","fBack","fTemp","buffers","render","bind","rect","reset","draw","mouseMove","keyDown","init","hasOwnProperty","undefined","HTMLElement","tagName","match","document","createElement","appendChild","opt","alpha","preserveDrawingBuffer","getContext","getExtension","console","log","mouse","addEventListener","escape","window","createProgram","vs","createShader","fs","linkProgram","deleteShader","texture","getUniformLocation","getAttribLocation","post300VS","post300FS","post300Program","post300UniLocation","post300AttLocation","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","disable","DEPTH_TEST","CULL_FACE","BLEND","clearColor","source","bound","getBoundingClientRect","resetBuffer","MODE_CLASSIC_MRT","MODE_GEEK_MRT","MODE_GEEKEST_MRT","createFramebufferMRT","createFramebuffer","viewport","preprocessVertexCode","preprocessFragmentCode","getProgramParameter","LINK_STATUS","msg","getProgramInfoLog","formatErrorMessage","warn","onBuildCallback","t","getTimeString","resolution","time","frame","sound","backbuffer","mrtBuffers","mrtShortBuffers","MODE_GEEK","MODE_GEEKER","MODE_GEEKEST","MODE_GEEK_300","MODE_GEEKER_300","deleteProgram","useProgram","sampler","Date","now","requestAnimationFrame","bindFramebuffer","FRAMEBUFFER","f","Array","isArray","drawBuffers","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","enableVertexAttribArray","vertexAttribPointer","FLOAT","clear","COLOR_BUFFER_BIT","uniform2fv","uniform1f","drawArrays","TRIANGLE_STRIP","flush","onDrawCallback","p","j","k","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","l","info","frameBuffer","depthRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","fTexture","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","d","count","tex","obj","isFramebuffer","deleteFramebuffer","isRenderbuffer","deleteRenderbuffer","forEach","deleteTexture","isTexture","eve","clientY","x","Math","min","clientX","y","keyCode","onBuild","callback","onDraw","setFrequency","setAnimation","animate","MODE_CLASSIC_300","replace","code","chunk300","chunkOut","chunkMain","chunkClose","substr","length","message","dec","noiseDec","split","line","parseInt","arguments","getHours","getMinutes","canvasWrap","currentMode","currentSource","fragmen","querySelector","parentElement","setTimeout","fragmenDefaultSource","children","disabled","includes"],"sourceRoot":""}